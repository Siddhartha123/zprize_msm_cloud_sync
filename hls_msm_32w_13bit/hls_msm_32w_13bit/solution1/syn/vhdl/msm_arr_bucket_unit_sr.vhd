-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity msm_arr_bucket_unit_sr is
port (
    BFIFO_1176_dout : IN STD_LOGIC_VECTOR (42 downto 0);
    BFIFO_1176_empty_n : IN STD_LOGIC;
    BFIFO_1176_read : OUT STD_LOGIC;
    B_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    B_i_ce0 : OUT STD_LOGIC;
    B_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_i_we0 : OUT STD_LOGIC;
    B_i_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    B_i_ce1 : OUT STD_LOGIC;
    B_i_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_i_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B_i_we1 : OUT STD_LOGIC;
    num_padd_ops : IN STD_LOGIC_VECTOR (12 downto 0);
    count_B_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    count_B_ce0 : OUT STD_LOGIC;
    count_B_d0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    count_B_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    count_B_we0 : OUT STD_LOGIC;
    count_B_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    count_B_ce1 : OUT STD_LOGIC;
    count_B_d1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    count_B_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    count_B_we1 : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    num_padd_ops_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of msm_arr_bucket_unit_sr is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

attribute shreg_extract : string;
    signal bucket_unit_sr_Block_split28_proc9_U0_ap_start : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_ap_done : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_ap_continue : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_ap_idle : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_ap_ready : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_start_out : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_start_write : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_ce0 : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_we0 : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_ce1 : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_we1 : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_B_i_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_BFIFO_1176_read : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_count_B_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_count_B_ce0 : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_BFIFO_2_read : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_CFIFO_din : STD_LOGIC_VECTOR (81 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_CFIFO_write : STD_LOGIC;
    signal bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_din : STD_LOGIC_VECTOR (12 downto 0);
    signal bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_start : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_done : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_continue : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_idle : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_ready : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_num_padd_ops_read : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_CFIFO_read : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_din : STD_LOGIC_VECTOR (42 downto 0);
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_write : STD_LOGIC;
    signal BFIFO_2_full_n : STD_LOGIC;
    signal BFIFO_2_dout : STD_LOGIC_VECTOR (42 downto 0);
    signal BFIFO_2_empty_n : STD_LOGIC;
    signal CFIFO_full_n : STD_LOGIC;
    signal CFIFO_dout : STD_LOGIC_VECTOR (81 downto 0);
    signal CFIFO_empty_n : STD_LOGIC;
    signal num_padd_ops_c_full_n : STD_LOGIC;
    signal num_padd_ops_c_dout : STD_LOGIC_VECTOR (12 downto 0);
    signal num_padd_ops_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_full_n : STD_LOGIC;
    signal start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_empty_n : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_start_full_n : STD_LOGIC;
    signal bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_start_write : STD_LOGIC;

    component msm_arr_bucket_unit_sr_Block_split28_proc9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        num_padd_ops : IN STD_LOGIC_VECTOR (12 downto 0);
        B_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        B_i_ce0 : OUT STD_LOGIC;
        B_i_we0 : OUT STD_LOGIC;
        B_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        B_i_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        B_i_ce1 : OUT STD_LOGIC;
        B_i_we1 : OUT STD_LOGIC;
        B_i_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        BFIFO_1176_dout : IN STD_LOGIC_VECTOR (42 downto 0);
        BFIFO_1176_empty_n : IN STD_LOGIC;
        BFIFO_1176_read : OUT STD_LOGIC;
        count_B_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        count_B_ce0 : OUT STD_LOGIC;
        count_B_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        BFIFO_2_dout : IN STD_LOGIC_VECTOR (42 downto 0);
        BFIFO_2_empty_n : IN STD_LOGIC;
        BFIFO_2_read : OUT STD_LOGIC;
        CFIFO_din : OUT STD_LOGIC_VECTOR (81 downto 0);
        CFIFO_full_n : IN STD_LOGIC;
        CFIFO_write : OUT STD_LOGIC;
        num_padd_ops_out_din : OUT STD_LOGIC_VECTOR (12 downto 0);
        num_padd_ops_out_full_n : IN STD_LOGIC;
        num_padd_ops_out_write : OUT STD_LOGIC );
    end component;


    component msm_arr_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        num_padd_ops_dout : IN STD_LOGIC_VECTOR (12 downto 0);
        num_padd_ops_empty_n : IN STD_LOGIC;
        num_padd_ops_read : OUT STD_LOGIC;
        CFIFO_dout : IN STD_LOGIC_VECTOR (81 downto 0);
        CFIFO_empty_n : IN STD_LOGIC;
        CFIFO_read : OUT STD_LOGIC;
        BFIFO_2_din : OUT STD_LOGIC_VECTOR (42 downto 0);
        BFIFO_2_full_n : IN STD_LOGIC;
        BFIFO_2_write : OUT STD_LOGIC );
    end component;


    component msm_arr_fifo_w43_d15_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (42 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (42 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component msm_arr_fifo_w82_d32_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (81 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (81 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component msm_arr_fifo_w13_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (12 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (12 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component msm_arr_start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    bucket_unit_sr_Block_split28_proc9_U0 : component msm_arr_bucket_unit_sr_Block_split28_proc9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => bucket_unit_sr_Block_split28_proc9_U0_ap_start,
        start_full_n => start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_full_n,
        ap_done => bucket_unit_sr_Block_split28_proc9_U0_ap_done,
        ap_continue => bucket_unit_sr_Block_split28_proc9_U0_ap_continue,
        ap_idle => bucket_unit_sr_Block_split28_proc9_U0_ap_idle,
        ap_ready => bucket_unit_sr_Block_split28_proc9_U0_ap_ready,
        start_out => bucket_unit_sr_Block_split28_proc9_U0_start_out,
        start_write => bucket_unit_sr_Block_split28_proc9_U0_start_write,
        num_padd_ops => num_padd_ops,
        B_i_address0 => bucket_unit_sr_Block_split28_proc9_U0_B_i_address0,
        B_i_ce0 => bucket_unit_sr_Block_split28_proc9_U0_B_i_ce0,
        B_i_we0 => bucket_unit_sr_Block_split28_proc9_U0_B_i_we0,
        B_i_d0 => bucket_unit_sr_Block_split28_proc9_U0_B_i_d0,
        B_i_address1 => bucket_unit_sr_Block_split28_proc9_U0_B_i_address1,
        B_i_ce1 => bucket_unit_sr_Block_split28_proc9_U0_B_i_ce1,
        B_i_we1 => bucket_unit_sr_Block_split28_proc9_U0_B_i_we1,
        B_i_d1 => bucket_unit_sr_Block_split28_proc9_U0_B_i_d1,
        BFIFO_1176_dout => BFIFO_1176_dout,
        BFIFO_1176_empty_n => BFIFO_1176_empty_n,
        BFIFO_1176_read => bucket_unit_sr_Block_split28_proc9_U0_BFIFO_1176_read,
        count_B_address0 => bucket_unit_sr_Block_split28_proc9_U0_count_B_address0,
        count_B_ce0 => bucket_unit_sr_Block_split28_proc9_U0_count_B_ce0,
        count_B_q0 => count_B_q0,
        BFIFO_2_dout => BFIFO_2_dout,
        BFIFO_2_empty_n => BFIFO_2_empty_n,
        BFIFO_2_read => bucket_unit_sr_Block_split28_proc9_U0_BFIFO_2_read,
        CFIFO_din => bucket_unit_sr_Block_split28_proc9_U0_CFIFO_din,
        CFIFO_full_n => CFIFO_full_n,
        CFIFO_write => bucket_unit_sr_Block_split28_proc9_U0_CFIFO_write,
        num_padd_ops_out_din => bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_din,
        num_padd_ops_out_full_n => num_padd_ops_c_full_n,
        num_padd_ops_out_write => bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_write);

    bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0 : component msm_arr_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_start,
        ap_done => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_done,
        ap_continue => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_continue,
        ap_idle => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_idle,
        ap_ready => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_ready,
        num_padd_ops_dout => num_padd_ops_c_dout,
        num_padd_ops_empty_n => num_padd_ops_c_empty_n,
        num_padd_ops_read => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_num_padd_ops_read,
        CFIFO_dout => CFIFO_dout,
        CFIFO_empty_n => CFIFO_empty_n,
        CFIFO_read => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_CFIFO_read,
        BFIFO_2_din => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_din,
        BFIFO_2_full_n => BFIFO_2_full_n,
        BFIFO_2_write => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_write);

    BFIFO_2_U : component msm_arr_fifo_w43_d15_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_din,
        if_full_n => BFIFO_2_full_n,
        if_write => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_BFIFO_2_write,
        if_dout => BFIFO_2_dout,
        if_empty_n => BFIFO_2_empty_n,
        if_read => bucket_unit_sr_Block_split28_proc9_U0_BFIFO_2_read);

    CFIFO_U : component msm_arr_fifo_w82_d32_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => bucket_unit_sr_Block_split28_proc9_U0_CFIFO_din,
        if_full_n => CFIFO_full_n,
        if_write => bucket_unit_sr_Block_split28_proc9_U0_CFIFO_write,
        if_dout => CFIFO_dout,
        if_empty_n => CFIFO_empty_n,
        if_read => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_CFIFO_read);

    num_padd_ops_c_U : component msm_arr_fifo_w13_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_din,
        if_full_n => num_padd_ops_c_full_n,
        if_write => bucket_unit_sr_Block_split28_proc9_U0_num_padd_ops_out_write,
        if_dout => num_padd_ops_c_dout,
        if_empty_n => num_padd_ops_c_empty_n,
        if_read => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_num_padd_ops_read);

    start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_U : component msm_arr_start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_din,
        if_full_n => start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_full_n,
        if_write => bucket_unit_sr_Block_split28_proc9_U0_start_write,
        if_dout => start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_dout,
        if_empty_n => start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_empty_n,
        if_read => bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_ready);




    BFIFO_1176_read <= bucket_unit_sr_Block_split28_proc9_U0_BFIFO_1176_read;
    B_i_address0 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_address0;
    B_i_address1 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_address1;
    B_i_ce0 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_ce0;
    B_i_ce1 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_ce1;
    B_i_d0 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_d0;
    B_i_d1 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_d1;
    B_i_we0 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_we0;
    B_i_we1 <= bucket_unit_sr_Block_split28_proc9_U0_B_i_we1;
    ap_done <= ap_sync_done;
    ap_idle <= (bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_idle and bucket_unit_sr_Block_split28_proc9_U0_ap_idle);
    ap_ready <= bucket_unit_sr_Block_split28_proc9_U0_ap_ready;
    ap_sync_continue <= (ap_sync_done and ap_continue);
    ap_sync_done <= (bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_done and bucket_unit_sr_Block_split28_proc9_U0_ap_done);
    ap_sync_ready <= bucket_unit_sr_Block_split28_proc9_U0_ap_ready;
    bucket_unit_sr_Block_split28_proc9_U0_ap_continue <= ap_sync_continue;
    bucket_unit_sr_Block_split28_proc9_U0_ap_start <= ap_start;
    bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_continue <= ap_sync_continue;
    bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_ap_start <= start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_empty_n;
    bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_start_full_n <= ap_const_logic_1;
    bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_start_write <= ap_const_logic_0;
    count_B_address0 <= bucket_unit_sr_Block_split28_proc9_U0_count_B_address0;
    count_B_address1 <= ap_const_lv4_0;
    count_B_ce0 <= bucket_unit_sr_Block_split28_proc9_U0_count_B_ce0;
    count_B_ce1 <= ap_const_logic_0;
    count_B_d0 <= ap_const_lv13_0;
    count_B_d1 <= ap_const_lv13_0;
    count_B_we0 <= ap_const_logic_0;
    count_B_we1 <= ap_const_logic_0;
    start_for_bucket_unit_sr_Loop_VITIS_LOOP_327_5_proc10_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
