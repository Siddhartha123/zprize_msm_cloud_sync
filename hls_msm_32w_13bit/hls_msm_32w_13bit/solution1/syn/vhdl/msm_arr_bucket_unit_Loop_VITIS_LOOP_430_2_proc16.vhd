-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity msm_arr_bucket_unit_Loop_VITIS_LOOP_430_2_proc16 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    num_padd_ops_dout : IN STD_LOGIC_VECTOR (12 downto 0);
    num_padd_ops_empty_n : IN STD_LOGIC;
    num_padd_ops_read : OUT STD_LOGIC;
    CFIFO_din : OUT STD_LOGIC_VECTOR (81 downto 0);
    CFIFO_full_n : IN STD_LOGIC;
    CFIFO_write : OUT STD_LOGIC;
    B_0_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_0_empty_n : IN STD_LOGIC;
    B_0_read : OUT STD_LOGIC;
    OVFIFO_dout : IN STD_LOGIC_VECTOR (42 downto 0);
    OVFIFO_empty_n : IN STD_LOGIC;
    OVFIFO_read : OUT STD_LOGIC;
    B_1_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_1_empty_n : IN STD_LOGIC;
    B_1_read : OUT STD_LOGIC;
    B_2_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_2_empty_n : IN STD_LOGIC;
    B_2_read : OUT STD_LOGIC;
    B_3_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_3_empty_n : IN STD_LOGIC;
    B_3_read : OUT STD_LOGIC;
    B_4_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_4_empty_n : IN STD_LOGIC;
    B_4_read : OUT STD_LOGIC;
    B_5_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_5_empty_n : IN STD_LOGIC;
    B_5_read : OUT STD_LOGIC;
    B_6_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_6_empty_n : IN STD_LOGIC;
    B_6_read : OUT STD_LOGIC;
    B_7_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_7_empty_n : IN STD_LOGIC;
    B_7_read : OUT STD_LOGIC;
    B_8_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_8_empty_n : IN STD_LOGIC;
    B_8_read : OUT STD_LOGIC;
    B_9_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_9_empty_n : IN STD_LOGIC;
    B_9_read : OUT STD_LOGIC;
    B_10_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_10_empty_n : IN STD_LOGIC;
    B_10_read : OUT STD_LOGIC;
    B_11_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_11_empty_n : IN STD_LOGIC;
    B_11_read : OUT STD_LOGIC;
    B_12_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_12_empty_n : IN STD_LOGIC;
    B_12_read : OUT STD_LOGIC;
    B_13_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_13_empty_n : IN STD_LOGIC;
    B_13_read : OUT STD_LOGIC;
    B_14_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_14_empty_n : IN STD_LOGIC;
    B_14_read : OUT STD_LOGIC;
    B_15_dout : IN STD_LOGIC_VECTOR (38 downto 0);
    B_15_empty_n : IN STD_LOGIC;
    B_15_read : OUT STD_LOGIC;
    num_padd_ops_out_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    num_padd_ops_out_full_n : IN STD_LOGIC;
    num_padd_ops_out_write : OUT STD_LOGIC );
end;


architecture behav of msm_arr_bucket_unit_Loop_VITIS_LOOP_430_2_proc16 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal num_padd_ops_blk_n : STD_LOGIC;
    signal CFIFO_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln878_reg_341 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_reg_341_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal B_0_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal icmp_ln878_reg_341_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal v1_V_reg_350 : STD_LOGIC_VECTOR (3 downto 0);
    signal OVFIFO_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal B_1_blk_n : STD_LOGIC;
    signal B_2_blk_n : STD_LOGIC;
    signal B_3_blk_n : STD_LOGIC;
    signal B_4_blk_n : STD_LOGIC;
    signal B_5_blk_n : STD_LOGIC;
    signal B_6_blk_n : STD_LOGIC;
    signal B_7_blk_n : STD_LOGIC;
    signal B_8_blk_n : STD_LOGIC;
    signal B_9_blk_n : STD_LOGIC;
    signal B_10_blk_n : STD_LOGIC;
    signal B_11_blk_n : STD_LOGIC;
    signal B_12_blk_n : STD_LOGIC;
    signal B_13_blk_n : STD_LOGIC;
    signal B_14_blk_n : STD_LOGIC;
    signal B_15_blk_n : STD_LOGIC;
    signal num_padd_ops_out_blk_n : STD_LOGIC;
    signal i_reg_249 : STD_LOGIC_VECTOR (12 downto 0);
    signal num_padd_ops_read_reg_331 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_4_fu_297_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op58_read_state4 : BOOLEAN;
    signal ap_predicate_op60_read_state4 : BOOLEAN;
    signal ap_predicate_op62_read_state4 : BOOLEAN;
    signal ap_predicate_op64_read_state4 : BOOLEAN;
    signal ap_predicate_op66_read_state4 : BOOLEAN;
    signal ap_predicate_op68_read_state4 : BOOLEAN;
    signal ap_predicate_op70_read_state4 : BOOLEAN;
    signal ap_predicate_op72_read_state4 : BOOLEAN;
    signal ap_predicate_op74_read_state4 : BOOLEAN;
    signal ap_predicate_op76_read_state4 : BOOLEAN;
    signal ap_predicate_op78_read_state4 : BOOLEAN;
    signal ap_predicate_op80_read_state4 : BOOLEAN;
    signal ap_predicate_op82_read_state4 : BOOLEAN;
    signal ap_predicate_op84_read_state4 : BOOLEAN;
    signal ap_predicate_op86_read_state4 : BOOLEAN;
    signal ap_predicate_op88_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln878_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_345 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_reg_345_pp0_iter2_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal v1_V_reg_350_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_v2_V_reg_260 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_phi_reg_pp0_iter1_v2_V_reg_260 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_phi_reg_pp0_iter2_v2_V_reg_260 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_phi_reg_pp0_iter3_v2_V_reg_260 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln674_fu_318_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_v2_V_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((v1_V_reg_350 = ap_const_lv4_0) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_0_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_1) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_1_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_2) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_2_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_3) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_3_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_4) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_4_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_5) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_5_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_6) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_6_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_7) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_7_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_8) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_8_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_9) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_9_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_A) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_10_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_B) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_11_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_C) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_12_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_D) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_13_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_E) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_14_dout;
                elsif (((v1_V_reg_350 = ap_const_lv4_F) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= B_15_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_v2_V_reg_260 <= ap_phi_reg_pp0_iter2_v2_V_reg_260;
                end if;
            end if; 
        end if;
    end process;

    i_reg_249_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_249 <= ap_const_lv13_0;
            elsif (((icmp_ln878_fu_303_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_reg_249 <= i_4_fu_297_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_v2_V_reg_260 <= ap_phi_reg_pp0_iter0_v2_V_reg_260;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_v2_V_reg_260 <= ap_phi_reg_pp0_iter1_v2_V_reg_260;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln878_reg_341 <= icmp_ln878_fu_303_p2;
                icmp_ln878_reg_341_pp0_iter1_reg <= icmp_ln878_reg_341;
                tmp_reg_345 <= OVFIFO_dout;
                v1_V_reg_350 <= OVFIFO_dout(42 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln878_reg_341_pp0_iter2_reg <= icmp_ln878_reg_341_pp0_iter1_reg;
                tmp_reg_345_pp0_iter2_reg <= tmp_reg_345;
                v1_V_reg_350_pp0_iter2_reg <= v1_V_reg_350;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                num_padd_ops_read_reg_331 <= num_padd_ops_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, num_padd_ops_empty_n, num_padd_ops_out_full_n, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, icmp_ln878_fu_303_p2, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln878_fu_303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln878_fu_303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    B_0_blk_n_assign_proc : process(B_0_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_0) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_0_blk_n <= B_0_empty_n;
        else 
            B_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_0_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op86_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op86_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_0_read <= ap_const_logic_1;
        else 
            B_0_read <= ap_const_logic_0;
        end if; 
    end process;


    B_10_blk_n_assign_proc : process(B_10_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_A) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_10_blk_n <= B_10_empty_n;
        else 
            B_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_10_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op66_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op66_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_10_read <= ap_const_logic_1;
        else 
            B_10_read <= ap_const_logic_0;
        end if; 
    end process;


    B_11_blk_n_assign_proc : process(B_11_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_B) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_11_blk_n <= B_11_empty_n;
        else 
            B_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_11_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op64_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op64_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_11_read <= ap_const_logic_1;
        else 
            B_11_read <= ap_const_logic_0;
        end if; 
    end process;


    B_12_blk_n_assign_proc : process(B_12_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_C) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_12_blk_n <= B_12_empty_n;
        else 
            B_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_12_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op62_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op62_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_12_read <= ap_const_logic_1;
        else 
            B_12_read <= ap_const_logic_0;
        end if; 
    end process;


    B_13_blk_n_assign_proc : process(B_13_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_D) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_13_blk_n <= B_13_empty_n;
        else 
            B_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_13_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op60_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op60_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_13_read <= ap_const_logic_1;
        else 
            B_13_read <= ap_const_logic_0;
        end if; 
    end process;


    B_14_blk_n_assign_proc : process(B_14_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_E) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_14_blk_n <= B_14_empty_n;
        else 
            B_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_14_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op58_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op58_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_14_read <= ap_const_logic_1;
        else 
            B_14_read <= ap_const_logic_0;
        end if; 
    end process;


    B_15_blk_n_assign_proc : process(B_15_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_F) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_15_blk_n <= B_15_empty_n;
        else 
            B_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_15_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op88_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op88_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_15_read <= ap_const_logic_1;
        else 
            B_15_read <= ap_const_logic_0;
        end if; 
    end process;


    B_1_blk_n_assign_proc : process(B_1_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_1) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_1_blk_n <= B_1_empty_n;
        else 
            B_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_1_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op84_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op84_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_1_read <= ap_const_logic_1;
        else 
            B_1_read <= ap_const_logic_0;
        end if; 
    end process;


    B_2_blk_n_assign_proc : process(B_2_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_2) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_2_blk_n <= B_2_empty_n;
        else 
            B_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_2_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op82_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op82_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_2_read <= ap_const_logic_1;
        else 
            B_2_read <= ap_const_logic_0;
        end if; 
    end process;


    B_3_blk_n_assign_proc : process(B_3_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_3) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_3_blk_n <= B_3_empty_n;
        else 
            B_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_3_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op80_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op80_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_3_read <= ap_const_logic_1;
        else 
            B_3_read <= ap_const_logic_0;
        end if; 
    end process;


    B_4_blk_n_assign_proc : process(B_4_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_4) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_4_blk_n <= B_4_empty_n;
        else 
            B_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_4_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op78_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op78_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_4_read <= ap_const_logic_1;
        else 
            B_4_read <= ap_const_logic_0;
        end if; 
    end process;


    B_5_blk_n_assign_proc : process(B_5_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_5) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_5_blk_n <= B_5_empty_n;
        else 
            B_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_5_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op76_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op76_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_5_read <= ap_const_logic_1;
        else 
            B_5_read <= ap_const_logic_0;
        end if; 
    end process;


    B_6_blk_n_assign_proc : process(B_6_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_6) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_6_blk_n <= B_6_empty_n;
        else 
            B_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_6_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op74_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op74_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_6_read <= ap_const_logic_1;
        else 
            B_6_read <= ap_const_logic_0;
        end if; 
    end process;


    B_7_blk_n_assign_proc : process(B_7_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_7) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_7_blk_n <= B_7_empty_n;
        else 
            B_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_7_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op72_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op72_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_7_read <= ap_const_logic_1;
        else 
            B_7_read <= ap_const_logic_0;
        end if; 
    end process;


    B_8_blk_n_assign_proc : process(B_8_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_8) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_8_blk_n <= B_8_empty_n;
        else 
            B_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_8_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op70_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op70_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_8_read <= ap_const_logic_1;
        else 
            B_8_read <= ap_const_logic_0;
        end if; 
    end process;


    B_9_blk_n_assign_proc : process(B_9_empty_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
        if (((v1_V_reg_350 = ap_const_lv4_9) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            B_9_blk_n <= B_9_empty_n;
        else 
            B_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    B_9_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op68_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op68_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            B_9_read <= ap_const_logic_1;
        else 
            B_9_read <= ap_const_logic_0;
        end if; 
    end process;


    CFIFO_blk_n_assign_proc : process(CFIFO_full_n, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, icmp_ln878_reg_341_pp0_iter2_reg)
    begin
        if (((icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            CFIFO_blk_n <= CFIFO_full_n;
        else 
            CFIFO_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    CFIFO_din <= ((v1_V_reg_350_pp0_iter2_reg & ap_phi_reg_pp0_iter3_v2_V_reg_260) & trunc_ln674_fu_318_p1);

    CFIFO_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln878_reg_341_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            CFIFO_write <= ap_const_logic_1;
        else 
            CFIFO_write <= ap_const_logic_0;
        end if; 
    end process;


    OVFIFO_blk_n_assign_proc : process(OVFIFO_empty_n, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            OVFIFO_blk_n <= OVFIFO_empty_n;
        else 
            OVFIFO_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OVFIFO_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            OVFIFO_read <= ap_const_logic_1;
        else 
            OVFIFO_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(CFIFO_full_n, B_0_empty_n, OVFIFO_empty_n, B_1_empty_n, B_2_empty_n, B_3_empty_n, B_4_empty_n, B_5_empty_n, B_6_empty_n, B_7_empty_n, B_8_empty_n, B_9_empty_n, B_10_empty_n, B_11_empty_n, B_12_empty_n, B_13_empty_n, B_14_empty_n, B_15_empty_n, ap_enable_reg_pp0_iter3, icmp_ln878_reg_341_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state4, ap_predicate_op60_read_state4, ap_predicate_op62_read_state4, ap_predicate_op64_read_state4, ap_predicate_op66_read_state4, ap_predicate_op68_read_state4, ap_predicate_op70_read_state4, ap_predicate_op72_read_state4, ap_predicate_op74_read_state4, ap_predicate_op76_read_state4, ap_predicate_op78_read_state4, ap_predicate_op80_read_state4, ap_predicate_op82_read_state4, ap_predicate_op84_read_state4, ap_predicate_op86_read_state4, ap_predicate_op88_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_logic_0 = CFIFO_full_n) and (icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_0 = OVFIFO_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op88_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_15_empty_n)) or ((ap_predicate_op86_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_0_empty_n)) or ((ap_predicate_op84_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_1_empty_n)) or ((ap_predicate_op82_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_2_empty_n)) or ((ap_predicate_op80_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_3_empty_n)) or ((ap_const_logic_0 = B_4_empty_n) and (ap_predicate_op78_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_5_empty_n) and (ap_predicate_op76_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_6_empty_n) and (ap_predicate_op74_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_7_empty_n) and (ap_predicate_op72_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_8_empty_n) and (ap_predicate_op70_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_9_empty_n) and (ap_predicate_op68_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_10_empty_n) and (ap_predicate_op66_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_11_empty_n) and (ap_predicate_op64_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_12_empty_n) and (ap_predicate_op62_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_13_empty_n) and (ap_predicate_op60_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_14_empty_n) and (ap_predicate_op58_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(CFIFO_full_n, B_0_empty_n, OVFIFO_empty_n, B_1_empty_n, B_2_empty_n, B_3_empty_n, B_4_empty_n, B_5_empty_n, B_6_empty_n, B_7_empty_n, B_8_empty_n, B_9_empty_n, B_10_empty_n, B_11_empty_n, B_12_empty_n, B_13_empty_n, B_14_empty_n, B_15_empty_n, ap_enable_reg_pp0_iter3, icmp_ln878_reg_341_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state4, ap_predicate_op60_read_state4, ap_predicate_op62_read_state4, ap_predicate_op64_read_state4, ap_predicate_op66_read_state4, ap_predicate_op68_read_state4, ap_predicate_op70_read_state4, ap_predicate_op72_read_state4, ap_predicate_op74_read_state4, ap_predicate_op76_read_state4, ap_predicate_op78_read_state4, ap_predicate_op80_read_state4, ap_predicate_op82_read_state4, ap_predicate_op84_read_state4, ap_predicate_op86_read_state4, ap_predicate_op88_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_logic_0 = CFIFO_full_n) and (icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_0 = OVFIFO_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op88_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_15_empty_n)) or ((ap_predicate_op86_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_0_empty_n)) or ((ap_predicate_op84_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_1_empty_n)) or ((ap_predicate_op82_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_2_empty_n)) or ((ap_predicate_op80_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_3_empty_n)) or ((ap_const_logic_0 = B_4_empty_n) and (ap_predicate_op78_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_5_empty_n) and (ap_predicate_op76_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_6_empty_n) and (ap_predicate_op74_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_7_empty_n) and (ap_predicate_op72_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_8_empty_n) and (ap_predicate_op70_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_9_empty_n) and (ap_predicate_op68_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_10_empty_n) and (ap_predicate_op66_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_11_empty_n) and (ap_predicate_op64_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_12_empty_n) and (ap_predicate_op62_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_13_empty_n) and (ap_predicate_op60_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_14_empty_n) and (ap_predicate_op58_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(CFIFO_full_n, B_0_empty_n, OVFIFO_empty_n, B_1_empty_n, B_2_empty_n, B_3_empty_n, B_4_empty_n, B_5_empty_n, B_6_empty_n, B_7_empty_n, B_8_empty_n, B_9_empty_n, B_10_empty_n, B_11_empty_n, B_12_empty_n, B_13_empty_n, B_14_empty_n, B_15_empty_n, ap_enable_reg_pp0_iter3, icmp_ln878_reg_341_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_predicate_op58_read_state4, ap_predicate_op60_read_state4, ap_predicate_op62_read_state4, ap_predicate_op64_read_state4, ap_predicate_op66_read_state4, ap_predicate_op68_read_state4, ap_predicate_op70_read_state4, ap_predicate_op72_read_state4, ap_predicate_op74_read_state4, ap_predicate_op76_read_state4, ap_predicate_op78_read_state4, ap_predicate_op80_read_state4, ap_predicate_op82_read_state4, ap_predicate_op84_read_state4, ap_predicate_op86_read_state4, ap_predicate_op88_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_logic_0 = CFIFO_full_n) and (icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_0 = OVFIFO_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((ap_predicate_op88_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_15_empty_n)) or ((ap_predicate_op86_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_0_empty_n)) or ((ap_predicate_op84_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_1_empty_n)) or ((ap_predicate_op82_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_2_empty_n)) or ((ap_predicate_op80_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_3_empty_n)) or ((ap_const_logic_0 = B_4_empty_n) and (ap_predicate_op78_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_5_empty_n) and (ap_predicate_op76_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_6_empty_n) and (ap_predicate_op74_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_7_empty_n) and (ap_predicate_op72_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_8_empty_n) and (ap_predicate_op70_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_9_empty_n) and (ap_predicate_op68_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_10_empty_n) and (ap_predicate_op66_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_11_empty_n) and (ap_predicate_op64_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_12_empty_n) and (ap_predicate_op62_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_13_empty_n) and (ap_predicate_op60_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_14_empty_n) and (ap_predicate_op58_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, num_padd_ops_empty_n, num_padd_ops_out_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(OVFIFO_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (ap_const_logic_0 = OVFIFO_empty_n);
    end process;


    ap_block_state4_pp0_stage0_iter2_assign_proc : process(B_0_empty_n, B_1_empty_n, B_2_empty_n, B_3_empty_n, B_4_empty_n, B_5_empty_n, B_6_empty_n, B_7_empty_n, B_8_empty_n, B_9_empty_n, B_10_empty_n, B_11_empty_n, B_12_empty_n, B_13_empty_n, B_14_empty_n, B_15_empty_n, ap_predicate_op58_read_state4, ap_predicate_op60_read_state4, ap_predicate_op62_read_state4, ap_predicate_op64_read_state4, ap_predicate_op66_read_state4, ap_predicate_op68_read_state4, ap_predicate_op70_read_state4, ap_predicate_op72_read_state4, ap_predicate_op74_read_state4, ap_predicate_op76_read_state4, ap_predicate_op78_read_state4, ap_predicate_op80_read_state4, ap_predicate_op82_read_state4, ap_predicate_op84_read_state4, ap_predicate_op86_read_state4, ap_predicate_op88_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (((ap_predicate_op88_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_15_empty_n)) or ((ap_predicate_op86_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_0_empty_n)) or ((ap_predicate_op84_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_1_empty_n)) or ((ap_predicate_op82_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_2_empty_n)) or ((ap_predicate_op80_read_state4 = ap_const_boolean_1) and (ap_const_logic_0 = B_3_empty_n)) or ((ap_const_logic_0 = B_4_empty_n) and (ap_predicate_op78_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_5_empty_n) and (ap_predicate_op76_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_6_empty_n) and (ap_predicate_op74_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_7_empty_n) and (ap_predicate_op72_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_8_empty_n) and (ap_predicate_op70_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_9_empty_n) and (ap_predicate_op68_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_10_empty_n) and (ap_predicate_op66_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_11_empty_n) and (ap_predicate_op64_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_12_empty_n) and (ap_predicate_op62_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_13_empty_n) and (ap_predicate_op60_read_state4 = ap_const_boolean_1)) or ((ap_const_logic_0 = B_14_empty_n) and (ap_predicate_op58_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage0_iter3_assign_proc : process(CFIFO_full_n, icmp_ln878_reg_341_pp0_iter2_reg)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((ap_const_logic_0 = CFIFO_full_n) and (icmp_ln878_reg_341_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln878_fu_303_p2)
    begin
        if ((icmp_ln878_fu_303_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_v2_V_reg_260 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op58_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op58_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_E) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op60_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op60_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_D) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op62_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op62_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_C) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op64_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op64_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_B) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op66_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op66_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_A) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op68_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op68_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_9) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op70_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op70_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_8) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op72_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op72_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_7) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op74_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op74_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_6) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op76_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op76_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_5) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op78_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op78_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_4) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op80_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op80_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_3) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op82_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op82_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_2) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op84_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op84_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_1) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op86_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op86_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_0) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op88_read_state4_assign_proc : process(icmp_ln878_reg_341_pp0_iter1_reg, v1_V_reg_350)
    begin
                ap_predicate_op88_read_state4 <= ((v1_V_reg_350 = ap_const_lv4_F) and (icmp_ln878_reg_341_pp0_iter1_reg = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;
    i_4_fu_297_p2 <= std_logic_vector(unsigned(i_reg_249) + unsigned(ap_const_lv13_1));
    icmp_ln878_fu_303_p2 <= "1" when (i_reg_249 = num_padd_ops_read_reg_331) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    num_padd_ops_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_blk_n <= num_padd_ops_empty_n;
        else 
            num_padd_ops_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    num_padd_ops_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_out_blk_n <= num_padd_ops_out_full_n;
        else 
            num_padd_ops_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_padd_ops_out_din <= num_padd_ops_dout;

    num_padd_ops_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_empty_n, num_padd_ops_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_out_write <= ap_const_logic_1;
        else 
            num_padd_ops_out_write <= ap_const_logic_0;
        end if; 
    end process;


    num_padd_ops_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_empty_n, num_padd_ops_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (num_padd_ops_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_padd_ops_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_read <= ap_const_logic_1;
        else 
            num_padd_ops_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln674_fu_318_p1 <= tmp_reg_345_pp0_iter2_reg(39 - 1 downto 0);
end behav;
