-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity msm_arr_bucket_unit_sr_Block_split28_proc9 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    num_padd_ops : IN STD_LOGIC_VECTOR (12 downto 0);
    B_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    B_i_ce0 : OUT STD_LOGIC;
    B_i_we0 : OUT STD_LOGIC;
    B_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_i_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    B_i_ce1 : OUT STD_LOGIC;
    B_i_we1 : OUT STD_LOGIC;
    B_i_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    BFIFO_1176_dout : IN STD_LOGIC_VECTOR (42 downto 0);
    BFIFO_1176_empty_n : IN STD_LOGIC;
    BFIFO_1176_read : OUT STD_LOGIC;
    count_B_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    count_B_ce0 : OUT STD_LOGIC;
    count_B_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    BFIFO_2_dout : IN STD_LOGIC_VECTOR (42 downto 0);
    BFIFO_2_empty_n : IN STD_LOGIC;
    BFIFO_2_read : OUT STD_LOGIC;
    CFIFO_din : OUT STD_LOGIC_VECTOR (81 downto 0);
    CFIFO_full_n : IN STD_LOGIC;
    CFIFO_write : OUT STD_LOGIC;
    num_padd_ops_out_din : OUT STD_LOGIC_VECTOR (12 downto 0);
    num_padd_ops_out_full_n : IN STD_LOGIC;
    num_padd_ops_out_write : OUT STD_LOGIC );
end;


architecture behav of msm_arr_bucket_unit_sr_Block_split28_proc9 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_pp2_stage1 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal BFIFO_1176_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal or_ln260_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_nbreadreq_fu_194_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal BFIFO_2_blk_n : STD_LOGIC;
    signal icmp_ln878_13_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_nbreadreq_fu_202_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal CFIFO_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln878_14_reg_1183 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln315_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_padd_ops_out_blk_n : STD_LOGIC;
    signal i_reg_530 : STD_LOGIC_VECTOR (4 downto 0);
    signal nibble_K_V_reg_541 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_29_fu_561_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal empty_32_fu_578_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal count_BF2_V_2_reg_1039 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_predicate_op113_read_state13 : BOOLEAN;
    signal ap_predicate_op120_read_state13 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal count_BF1_V_2_reg_1044 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln878_reg_1049 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_13_reg_1053 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln260_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1061 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_i_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_reg_1069 : STD_LOGIC_VECTOR (42 downto 0);
    signal lhs_V_2_fu_638_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_V_2_reg_1077 : STD_LOGIC_VECTOR (3 downto 0);
    signal padd_count_V_addr_16_reg_1082 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_1_reg_1093 : STD_LOGIC_VECTOR (42 downto 0);
    signal lhs_V_fu_654_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs_V_reg_1101 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln870_3_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_3_reg_1111 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage1 : signal is "none";
    signal ap_block_state14_pp2_stage1_iter0 : BOOLEAN;
    signal ap_block_pp2_stage1_11001 : BOOLEAN;
    signal icmp_ln870_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_reg_1119 : STD_LOGIC_VECTOR (0 downto 0);
    signal bcount_addr_3_reg_1123 : STD_LOGIC_VECTOR (3 downto 0);
    signal fill_count_addr_2_reg_1128 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln307_fu_865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln307_reg_1133 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state17_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal add_ln307_fu_871_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal trunc_ln301_fu_882_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln301_reg_1147 : STD_LOGIC_VECTOR (3 downto 0);
    signal nibble_K_V_1_fu_902_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal bcount_addr_1_reg_1169 : STD_LOGIC_VECTOR (3 downto 0);
    signal num_padd_ops_cast_fu_926_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_padd_ops_cast_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal or_ln315_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_14_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage1_subdone : BOOLEAN;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state17 : STD_LOGIC;
    signal padd_count_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal padd_count_V_ce0 : STD_LOGIC;
    signal padd_count_V_we0 : STD_LOGIC;
    signal padd_count_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal padd_count_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal padd_count_V_ce1 : STD_LOGIC;
    signal padd_count_V_we1 : STD_LOGIC;
    signal padd_count_V_d1 : STD_LOGIC_VECTOR (12 downto 0);
    signal bcount_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal bcount_ce0 : STD_LOGIC;
    signal bcount_we0 : STD_LOGIC;
    signal bcount_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bcount_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fill_count_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal fill_count_ce0 : STD_LOGIC;
    signal fill_count_we0 : STD_LOGIC;
    signal fill_count_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal fill_count_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_499 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exitcond2836_i_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_31_reg_510 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond2735_i_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_phi_mux_data_V_phi_fu_524_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_phi_reg_pp2_iter0_data_V_reg_521 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_cast_i_fu_573_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_i_fu_590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln708_1_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln708_fu_664_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln281_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage1 : BOOLEAN;
    signal zext_ln282_fu_748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i149_i_fu_790_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln268_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln269_fu_842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_cast_i_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv_i112_i_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal count_BF2_V_fu_164 : STD_LOGIC_VECTOR (12 downto 0);
    signal count_BF2_V_3_fu_669_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal count_BF1_V_fu_168 : STD_LOGIC_VECTOR (12 downto 0);
    signal count_BF1_V_3_fu_757_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_s_fu_172 : STD_LOGIC_VECTOR (42 downto 0);
    signal i_4_fu_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_7_fu_959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_predicate_op239_write_state22 : BOOLEAN;
    signal ap_block_state22 : BOOLEAN;
    signal add_ln691_fu_675_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln294_fu_851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln319_fu_973_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln295_fu_858_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln358_2_fu_711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln358_3_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln358_fu_805_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln358_1_fu_831_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_611_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1347_fu_686_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln870_fu_682_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ret_V_1_fu_690_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_4_i_fu_702_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_2_fu_716_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln1_fu_721_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln674_1_fu_734_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln282_fu_742_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal nibble_K_V_2_fu_769_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_1_i_fu_796_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_fu_810_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_815_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln674_fu_828_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln269_fu_836_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_886_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln308_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_929_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal lnot_i_i_i_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln315_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_2_fu_980_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_condition_512 : BOOLEAN;
    signal ap_condition_521 : BOOLEAN;
    signal ap_condition_508 : BOOLEAN;
    signal ap_condition_129 : BOOLEAN;
    signal ap_condition_113 : BOOLEAN;
    signal ap_condition_104 : BOOLEAN;
    signal ap_condition_256 : BOOLEAN;
    signal ap_condition_422 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component msm_arr_bucket_unit_sr_Block_split28_proc9_padd_count_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component msm_arr_bucket_unit_sr_Block_split28_proc9_bcount IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    padd_count_V_U : component msm_arr_bucket_unit_sr_Block_split28_proc9_padd_count_V
    generic map (
        DataWidth => 13,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => padd_count_V_address0,
        ce0 => padd_count_V_ce0,
        we0 => padd_count_V_we0,
        d0 => ap_const_lv13_0,
        q0 => padd_count_V_q0,
        address1 => padd_count_V_address1,
        ce1 => padd_count_V_ce1,
        we1 => padd_count_V_we1,
        d1 => padd_count_V_d1);

    bcount_U : component msm_arr_bucket_unit_sr_Block_split28_proc9_bcount
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bcount_address0,
        ce0 => bcount_ce0,
        we0 => bcount_we0,
        d0 => bcount_d0,
        q0 => bcount_q0);

    fill_count_U : component msm_arr_bucket_unit_sr_Block_split28_proc9_bcount
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fill_count_address0,
        ce0 => fill_count_ce0,
        we0 => fill_count_we0,
        d0 => fill_count_d0,
        q0 => fill_count_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state13) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_subdone)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state17) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state17);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    count_BF1_V_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                count_BF1_V_fu_168 <= ap_const_lv13_0;
            elsif ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)))) then 
                count_BF1_V_fu_168 <= count_BF1_V_3_fu_757_p2;
            end if; 
        end if;
    end process;

    count_BF2_V_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                count_BF2_V_fu_164 <= ap_const_lv13_0;
            elsif ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))))) then 
                count_BF2_V_fu_164 <= count_BF2_V_3_fu_669_p2;
            end if; 
        end if;
    end process;

    empty_31_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                empty_31_reg_510 <= ap_const_lv5_0;
            elsif (((exitcond2735_i_fu_584_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                empty_31_reg_510 <= empty_32_fu_578_p2;
            end if; 
        end if;
    end process;

    empty_reg_499_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2836_i_fu_567_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                empty_reg_499 <= empty_29_fu_561_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                empty_reg_499 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_4_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                i_4_fu_176 <= ap_const_lv32_0;
            elsif (((icmp_ln878_14_fu_954_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21) and (or_ln315_reg_1179 = ap_const_lv1_0))) then 
                i_4_fu_176 <= i_7_fu_959_p2;
            end if; 
        end if;
    end process;

    i_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i_reg_530 <= ap_const_lv5_1;
            elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln307_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                i_reg_530 <= add_ln307_fu_871_p2;
            end if; 
        end if;
    end process;

    nibble_K_V_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                nibble_K_V_reg_541 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln307_reg_1133 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                nibble_K_V_reg_541 <= nibble_K_V_1_fu_902_p3;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if ((ap_const_boolean_1 = ap_condition_521)) then 
                    p_Val2_s_fu_172 <= p_Val2_1_reg_1093;
                elsif ((ap_const_boolean_1 = ap_condition_256)) then 
                    p_Val2_s_fu_172 <= ap_phi_mux_data_V_phi_fu_524_p4;
                elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                    p_Val2_s_fu_172 <= p_Val2_2_reg_1069;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                bcount_addr_1_reg_1169 <= conv_i112_i_fu_909_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and ((((icmp_ln874_fu_779_p2 = ap_const_lv1_0) and (icmp_ln870_fu_763_p2 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1)) or ((icmp_ln874_fu_779_p2 = ap_const_lv1_0) and (icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1))) or ((icmp_ln874_fu_779_p2 = ap_const_lv1_0) and (icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0))))) then
                bcount_addr_3_reg_1123 <= conv_i149_i_fu_790_p1(4 - 1 downto 0);
                fill_count_addr_2_reg_1128 <= conv_i149_i_fu_790_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                count_BF1_V_2_reg_1044 <= count_BF1_V_fu_168;
                count_BF2_V_2_reg_1039 <= count_BF2_V_fu_164;
                icmp_ln878_13_reg_1053 <= icmp_ln878_13_fu_627_p2;
                icmp_ln878_reg_1049 <= icmp_ln878_fu_621_p2;
                or_ln260_reg_1057 <= or_ln260_fu_632_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln307_reg_1133 <= icmp_ln307_fu_865_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0))))) then
                icmp_ln870_3_reg_1111 <= icmp_ln870_3_fu_696_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001))) then
                icmp_ln870_reg_1115 <= icmp_ln870_fu_763_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and ((((icmp_ln870_fu_763_p2 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1))) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0))))) then
                icmp_ln874_reg_1119 <= icmp_ln874_fu_779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                icmp_ln878_14_reg_1183 <= icmp_ln878_14_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1))))) then
                lhs_V_2_reg_1077 <= BFIFO_2_dout(42 downto 39);
                padd_count_V_addr_16_reg_1082 <= zext_ln708_1_fu_648_p1(4 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                lhs_V_reg_1101 <= BFIFO_1176_dout(42 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    num_padd_ops_cast_reg_1174(12 downto 0) <= num_padd_ops_cast_fu_926_p1(12 downto 0);
                or_ln315_reg_1179 <= or_ln315_fu_945_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op120_read_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                p_Val2_1_reg_1093 <= BFIFO_1176_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op113_read_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                p_Val2_2_reg_1069 <= BFIFO_2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (((icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1))))) then
                tmp_8_i_reg_1065 <= tmp_8_i_nbreadreq_fu_202_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_i_reg_1061 <= tmp_i_nbreadreq_fu_194_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln307_fu_865_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                trunc_ln301_reg_1147 <= trunc_ln301_fu_882_p1;
            end if;
        end if;
    end process;
    num_padd_ops_cast_reg_1174(31 downto 13) <= "0000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, CFIFO_full_n, num_padd_ops_out_full_n, ap_enable_reg_pp2_iter0, or_ln260_fu_632_p2, ap_CS_fsm_state22, ap_CS_fsm_state9, ap_CS_fsm_state11, icmp_ln307_fu_865_p2, ap_enable_reg_pp3_iter0, icmp_ln878_14_fu_954_p2, ap_CS_fsm_state21, ap_block_pp2_stage0_subdone, ap_block_pp2_stage1_subdone, ap_block_pp3_stage0_subdone, exitcond2836_i_fu_567_p2, exitcond2735_i_fu_584_p2, ap_predicate_op239_write_state22)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((exitcond2836_i_fu_567_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((exitcond2735_i_fu_584_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (or_ln260_fu_632_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (or_ln260_fu_632_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp2_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage1;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln307_fu_865_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (icmp_ln307_fu_865_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln878_14_fu_954_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state22 => 
                if ((not(((ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_0 = CFIFO_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    BFIFO_1176_blk_n_assign_proc : process(BFIFO_1176_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            BFIFO_1176_blk_n <= BFIFO_1176_empty_n;
        else 
            BFIFO_1176_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    BFIFO_1176_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_predicate_op120_read_state13, ap_block_pp2_stage0_11001)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op120_read_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            BFIFO_1176_read <= ap_const_logic_1;
        else 
            BFIFO_1176_read <= ap_const_logic_0;
        end if; 
    end process;


    BFIFO_2_blk_n_assign_proc : process(BFIFO_2_empty_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3, icmp_ln878_13_fu_627_p2, tmp_8_i_nbreadreq_fu_202_p3)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1))))) then 
            BFIFO_2_blk_n <= BFIFO_2_empty_n;
        else 
            BFIFO_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    BFIFO_2_read_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_predicate_op113_read_state13, ap_block_pp2_stage0_11001)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_predicate_op113_read_state13 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            BFIFO_2_read <= ap_const_logic_1;
        else 
            BFIFO_2_read <= ap_const_logic_0;
        end if; 
    end process;


    B_i_address0_assign_proc : process(zext_ln282_fu_748_p1, zext_ln269_fu_842_p1, ap_condition_512, ap_condition_521, ap_condition_508)
    begin
        if ((ap_const_boolean_1 = ap_condition_508)) then
            if ((ap_const_boolean_1 = ap_condition_521)) then 
                B_i_address0 <= zext_ln269_fu_842_p1(5 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                B_i_address0 <= zext_ln282_fu_748_p1(5 - 1 downto 0);
            else 
                B_i_address0 <= "XXXXX";
            end if;
        else 
            B_i_address0 <= "XXXXX";
        end if; 
    end process;


    B_i_address1_assign_proc : process(zext_ln281_fu_729_p1, zext_ln268_fu_823_p1, ap_condition_512, ap_condition_521, ap_condition_508)
    begin
        if ((ap_const_boolean_1 = ap_condition_508)) then
            if ((ap_const_boolean_1 = ap_condition_521)) then 
                B_i_address1 <= zext_ln268_fu_823_p1(5 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                B_i_address1 <= zext_ln281_fu_729_p1(5 - 1 downto 0);
            else 
                B_i_address1 <= "XXXXX";
            end if;
        else 
            B_i_address1 <= "XXXXX";
        end if; 
    end process;


    B_i_ce0_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, icmp_ln870_fu_763_p2)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))))) then 
            B_i_ce0 <= ap_const_logic_1;
        else 
            B_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_i_ce1_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, icmp_ln870_fu_763_p2)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))))) then 
            B_i_ce1 <= ap_const_logic_1;
        else 
            B_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_i_d0_assign_proc : process(zext_ln358_3_fu_737_p1, zext_ln358_1_fu_831_p1, ap_condition_512, ap_condition_521, ap_condition_508)
    begin
        if ((ap_const_boolean_1 = ap_condition_508)) then
            if ((ap_const_boolean_1 = ap_condition_521)) then 
                B_i_d0 <= zext_ln358_1_fu_831_p1;
            elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                B_i_d0 <= zext_ln358_3_fu_737_p1;
            else 
                B_i_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            B_i_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_i_d1_assign_proc : process(zext_ln358_2_fu_711_p1, zext_ln358_fu_805_p1, ap_condition_512, ap_condition_521, ap_condition_508)
    begin
        if ((ap_const_boolean_1 = ap_condition_508)) then
            if ((ap_const_boolean_1 = ap_condition_521)) then 
                B_i_d1 <= zext_ln358_fu_805_p1;
            elsif ((ap_const_boolean_1 = ap_condition_512)) then 
                B_i_d1 <= zext_ln358_2_fu_711_p1;
            else 
                B_i_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            B_i_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    B_i_we0_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, icmp_ln870_fu_763_p2)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))))) then 
            B_i_we0 <= ap_const_logic_1;
        else 
            B_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_i_we1_assign_proc : process(ap_enable_reg_pp2_iter0, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, icmp_ln870_fu_763_p2)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))))) then 
            B_i_we1 <= ap_const_logic_1;
        else 
            B_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    CFIFO_blk_n_assign_proc : process(CFIFO_full_n, ap_CS_fsm_state22, icmp_ln878_14_reg_1183, or_ln315_reg_1179)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) and (or_ln315_reg_1179 = ap_const_lv1_0) and (icmp_ln878_14_reg_1183 = ap_const_lv1_1))) then 
            CFIFO_blk_n <= CFIFO_full_n;
        else 
            CFIFO_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    CFIFO_din <= ((nibble_K_V_reg_541 & ap_const_lv39_0) & trunc_ln674_2_fu_980_p1);

    CFIFO_write_assign_proc : process(CFIFO_full_n, ap_CS_fsm_state22, ap_predicate_op239_write_state22)
    begin
        if ((not(((ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_0 = CFIFO_full_n))) and (ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            CFIFO_write <= ap_const_logic_1;
        else 
            CFIFO_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln294_fu_851_p2 <= std_logic_vector(unsigned(bcount_q0) + unsigned(ap_const_lv32_1));
    add_ln295_fu_858_p2 <= std_logic_vector(unsigned(fill_count_q0) + unsigned(ap_const_lv32_1));
    add_ln307_fu_871_p2 <= std_logic_vector(unsigned(i_reg_530) + unsigned(ap_const_lv5_1));
    add_ln319_fu_973_p2 <= std_logic_vector(unsigned(bcount_q0) + unsigned(ap_const_lv32_FFFFFFFE));
    add_ln691_fu_675_p2 <= std_logic_vector(unsigned(padd_count_V_q0) + unsigned(ap_const_lv13_1));
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage1 <= ap_CS_fsm(13);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state19 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(17);
    ap_CS_fsm_state21 <= ap_CS_fsm(18);
    ap_CS_fsm_state22 <= ap_CS_fsm(19);
    ap_CS_fsm_state23 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(BFIFO_1176_empty_n, BFIFO_2_empty_n, ap_enable_reg_pp2_iter0, ap_predicate_op113_read_state13, ap_predicate_op120_read_state13)
    begin
                ap_block_pp2_stage0_11001 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (((ap_const_logic_0 = BFIFO_1176_empty_n) and (ap_predicate_op120_read_state13 = ap_const_boolean_1)) or ((ap_const_logic_0 = BFIFO_2_empty_n) and (ap_predicate_op113_read_state13 = ap_const_boolean_1))));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(BFIFO_1176_empty_n, BFIFO_2_empty_n, ap_enable_reg_pp2_iter0, ap_predicate_op113_read_state13, ap_predicate_op120_read_state13)
    begin
                ap_block_pp2_stage0_subdone <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (((ap_const_logic_0 = BFIFO_1176_empty_n) and (ap_predicate_op120_read_state13 = ap_const_boolean_1)) or ((ap_const_logic_0 = BFIFO_2_empty_n) and (ap_predicate_op113_read_state13 = ap_const_boolean_1))));
    end process;

        ap_block_pp2_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, num_padd_ops_out_full_n)
    begin
                ap_block_state1 <= ((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state13_pp2_stage0_iter0_assign_proc : process(BFIFO_1176_empty_n, BFIFO_2_empty_n, ap_predicate_op113_read_state13, ap_predicate_op120_read_state13)
    begin
                ap_block_state13_pp2_stage0_iter0 <= (((ap_const_logic_0 = BFIFO_1176_empty_n) and (ap_predicate_op120_read_state13 = ap_const_boolean_1)) or ((ap_const_logic_0 = BFIFO_2_empty_n) and (ap_predicate_op113_read_state13 = ap_const_boolean_1)));
    end process;

        ap_block_state14_pp2_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_assign_proc : process(CFIFO_full_n, ap_predicate_op239_write_state22)
    begin
                ap_block_state22 <= ((ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_0 = CFIFO_full_n));
    end process;


    ap_condition_104_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0)
    begin
                ap_condition_104 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0));
    end process;


    ap_condition_113_assign_proc : process(or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3)
    begin
                ap_condition_113 <= ((tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1));
    end process;


    ap_condition_129_assign_proc : process(or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3, icmp_ln878_13_fu_627_p2, tmp_8_i_nbreadreq_fu_202_p3)
    begin
                ap_condition_129 <= (((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)));
    end process;


    ap_condition_256_assign_proc : process(icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2, icmp_ln870_fu_763_p2)
    begin
                ap_condition_256 <= ((((icmp_ln870_fu_763_p2 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1))) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)));
    end process;


    ap_condition_422_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001)
    begin
                ap_condition_422 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001));
    end process;


    ap_condition_508_assign_proc : process(ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1)
    begin
                ap_condition_508 <= ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1));
    end process;


    ap_condition_512_assign_proc : process(icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_fu_696_p2)
    begin
                ap_condition_512 <= (((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_1) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)));
    end process;


    ap_condition_521_assign_proc : process(icmp_ln878_reg_1049, or_ln260_reg_1057, tmp_i_reg_1061, icmp_ln870_fu_763_p2)
    begin
                ap_condition_521 <= ((icmp_ln870_fu_763_p2 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1));
    end process;


    ap_condition_pp2_exit_iter0_state13_assign_proc : process(or_ln260_fu_632_p2)
    begin
        if ((or_ln260_fu_632_p2 = ap_const_lv1_0)) then 
            ap_condition_pp2_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state17_assign_proc : process(icmp_ln307_fu_865_p2)
    begin
        if ((icmp_ln307_fu_865_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_data_V_phi_fu_524_p4_assign_proc : process(icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, p_Val2_2_reg_1069, p_Val2_1_reg_1093, icmp_ln870_3_fu_696_p2, icmp_ln870_fu_763_p2, ap_phi_reg_pp2_iter0_data_V_reg_521)
    begin
        if ((((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((icmp_ln870_3_fu_696_p2 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))) then 
            ap_phi_mux_data_V_phi_fu_524_p4 <= p_Val2_2_reg_1069;
        elsif (((icmp_ln870_fu_763_p2 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1))) then 
            ap_phi_mux_data_V_phi_fu_524_p4 <= p_Val2_1_reg_1093;
        else 
            ap_phi_mux_data_V_phi_fu_524_p4 <= ap_phi_reg_pp2_iter0_data_V_reg_521;
        end if; 
    end process;

    ap_phi_reg_pp2_iter0_data_V_reg_521 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op113_read_state13_assign_proc : process(or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3, icmp_ln878_13_fu_627_p2, tmp_8_i_nbreadreq_fu_202_p3)
    begin
                ap_predicate_op113_read_state13 <= (((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)));
    end process;


    ap_predicate_op120_read_state13_assign_proc : process(or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3)
    begin
                ap_predicate_op120_read_state13 <= ((tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1));
    end process;


    ap_predicate_op239_write_state22_assign_proc : process(icmp_ln878_14_reg_1183, or_ln315_reg_1179)
    begin
                ap_predicate_op239_write_state22 <= ((or_ln315_reg_1179 = ap_const_lv1_0) and (icmp_ln878_14_reg_1183 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    bcount_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_state22, ap_CS_fsm_state9, ap_CS_fsm_pp2_stage1, bcount_addr_3_reg_1123, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, bcount_addr_1_reg_1169, ap_CS_fsm_state21, ap_enable_reg_pp2_iter1, ap_block_pp3_stage0, p_cast_i_fu_573_p1, ap_block_pp2_stage1, conv_i149_i_fu_790_p1, i_cast_i_fu_877_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            bcount_address0 <= bcount_addr_1_reg_1169;
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            bcount_address0 <= i_cast_i_fu_877_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            bcount_address0 <= bcount_addr_3_reg_1123;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            bcount_address0 <= conv_i149_i_fu_790_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcount_address0 <= p_cast_i_fu_573_p1(4 - 1 downto 0);
        else 
            bcount_address0 <= "XXXX";
        end if; 
    end process;


    bcount_ce0_assign_proc : process(CFIFO_full_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_state22, ap_CS_fsm_state9, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state21, ap_enable_reg_pp2_iter1, ap_predicate_op239_write_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or (not(((ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_0 = CFIFO_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state22)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            bcount_ce0 <= ap_const_logic_1;
        else 
            bcount_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bcount_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_CS_fsm_state22, ap_CS_fsm_state9, ap_enable_reg_pp2_iter1, add_ln294_fu_851_p2, add_ln319_fu_973_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            bcount_d0 <= add_ln319_fu_973_p2;
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            bcount_d0 <= add_ln294_fu_851_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bcount_d0 <= ap_const_lv32_0;
        else 
            bcount_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bcount_we0_assign_proc : process(CFIFO_full_n, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state22, icmp_ln878_14_reg_1183, or_ln315_reg_1179, ap_CS_fsm_state9, ap_block_pp2_stage0_11001, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_reg_1111, icmp_ln870_reg_1115, icmp_ln874_reg_1119, ap_enable_reg_pp2_iter1, exitcond2836_i_fu_567_p2, ap_predicate_op239_write_state22)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and ((((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_reg_1115 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1)) or ((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_3_reg_1111 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1))) or ((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_3_reg_1111 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))) or (not(((ap_predicate_op239_write_state22 = ap_const_boolean_1) and (ap_const_logic_0 = CFIFO_full_n))) and (ap_const_logic_1 = ap_CS_fsm_state22) and (or_ln315_reg_1179 = ap_const_lv1_0) and (icmp_ln878_14_reg_1183 = ap_const_lv1_1)) or ((exitcond2836_i_fu_567_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            bcount_we0 <= ap_const_logic_1;
        else 
            bcount_we0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_i112_i_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nibble_K_V_reg_541),64));
    conv_i149_i_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nibble_K_V_2_fu_769_p4),64));
    count_BF1_V_3_fu_757_p2 <= std_logic_vector(unsigned(count_BF1_V_2_reg_1044) + unsigned(ap_const_lv13_1));
    count_BF2_V_3_fu_669_p2 <= std_logic_vector(unsigned(count_BF2_V_2_reg_1039) + unsigned(ap_const_lv13_1));

    count_B_address0_assign_proc : process(zext_ln708_1_fu_648_p1, zext_ln708_fu_664_p1, ap_condition_129, ap_condition_113, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((ap_const_boolean_1 = ap_condition_113)) then 
                count_B_address0 <= zext_ln708_fu_664_p1(4 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_129)) then 
                count_B_address0 <= zext_ln708_1_fu_648_p1(4 - 1 downto 0);
            else 
                count_B_address0 <= "XXXX";
            end if;
        else 
            count_B_address0 <= "XXXX";
        end if; 
    end process;


    count_B_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, or_ln260_fu_632_p2, icmp_ln878_fu_621_p2, tmp_i_nbreadreq_fu_194_p3, icmp_ln878_13_fu_627_p2, tmp_8_i_nbreadreq_fu_202_p3, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)) or ((tmp_8_i_nbreadreq_fu_202_p3 = ap_const_lv1_1) and (icmp_ln878_13_fu_627_p2 = ap_const_lv1_1) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_0) and (or_ln260_fu_632_p2 = ap_const_lv1_1)))) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (tmp_i_nbreadreq_fu_194_p3 = ap_const_lv1_1) and (icmp_ln878_fu_621_p2 = ap_const_lv1_1) and (or_ln260_fu_632_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            count_B_ce0 <= ap_const_logic_1;
        else 
            count_B_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_29_fu_561_p2 <= std_logic_vector(unsigned(empty_reg_499) + unsigned(ap_const_lv5_1));
    empty_32_fu_578_p2 <= std_logic_vector(unsigned(empty_31_reg_510) + unsigned(ap_const_lv5_1));
    exitcond2735_i_fu_584_p2 <= "1" when (empty_31_reg_510 = ap_const_lv5_10) else "0";
    exitcond2836_i_fu_567_p2 <= "1" when (empty_reg_499 = ap_const_lv5_10) else "0";

    fill_count_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_state11, ap_CS_fsm_pp2_stage1, fill_count_addr_2_reg_1128, ap_CS_fsm_state19, ap_enable_reg_pp2_iter1, p_cast15_i_fu_590_p1, ap_block_pp2_stage1, conv_i149_i_fu_790_p1, conv_i112_i_fu_909_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            fill_count_address0 <= conv_i112_i_fu_909_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            fill_count_address0 <= fill_count_addr_2_reg_1128;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            fill_count_address0 <= conv_i149_i_fu_790_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            fill_count_address0 <= p_cast15_i_fu_590_p1(4 - 1 downto 0);
        else 
            fill_count_address0 <= "XXXX";
        end if; 
    end process;


    fill_count_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_state11, ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_state19, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            fill_count_ce0 <= ap_const_logic_1;
        else 
            fill_count_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fill_count_d0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0, ap_CS_fsm_state11, ap_enable_reg_pp2_iter1, add_ln295_fu_858_p2)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            fill_count_d0 <= add_ln295_fu_858_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            fill_count_d0 <= ap_const_lv32_0;
        else 
            fill_count_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fill_count_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state11, ap_block_pp2_stage0_11001, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, tmp_i_reg_1061, tmp_8_i_reg_1065, icmp_ln870_3_reg_1111, icmp_ln870_reg_1115, icmp_ln874_reg_1119, ap_enable_reg_pp2_iter1, exitcond2735_i_fu_584_p2)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and ((((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_reg_1115 = ap_const_lv1_0) and (tmp_i_reg_1061 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_1)) or ((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_3_reg_1111 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1))) or ((icmp_ln874_reg_1119 = ap_const_lv1_0) and (icmp_ln870_3_reg_1111 = ap_const_lv1_0) and (tmp_8_i_reg_1065 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))) or ((exitcond2735_i_fu_584_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            fill_count_we0 <= ap_const_logic_1;
        else 
            fill_count_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_7_fu_959_p2 <= std_logic_vector(unsigned(i_4_fu_176) + unsigned(ap_const_lv32_1));
    i_cast_i_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_530),64));
    icmp_ln307_fu_865_p2 <= "1" when (i_reg_530 = ap_const_lv5_10) else "0";
    icmp_ln308_fu_896_p2 <= "1" when (signed(tmp_4_fu_886_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln315_fu_939_p2 <= "1" when (signed(tmp_3_fu_929_p4) < signed(ap_const_lv29_1)) else "0";
    icmp_ln870_3_fu_696_p2 <= "1" when (zext_ln870_fu_682_p1 = ret_V_1_fu_690_p2) else "0";
    icmp_ln870_fu_763_p2 <= "1" when (count_B_q0 = ap_const_lv13_1) else "0";
    icmp_ln874_fu_779_p2 <= "1" when (nibble_K_V_2_fu_769_p4 = ap_const_lv4_0) else "0";
    icmp_ln878_13_fu_627_p2 <= "1" when (unsigned(count_BF2_V_fu_164) < unsigned(num_padd_ops)) else "0";
    icmp_ln878_14_fu_954_p2 <= "1" when (signed(i_4_fu_176) < signed(num_padd_ops_cast_reg_1174)) else "0";
    icmp_ln878_fu_621_p2 <= "1" when (tmp_fu_611_p4 = ap_const_lv6_0) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    lhs_V_2_fu_638_p4 <= BFIFO_2_dout(42 downto 39);
    lhs_V_fu_654_p4 <= BFIFO_1176_dout(42 downto 39);
    lnot_i_i_i_fu_920_p2 <= "1" when (nibble_K_V_reg_541 = ap_const_lv4_0) else "0";
    nibble_K_V_1_fu_902_p3 <= 
        trunc_ln301_reg_1147 when (icmp_ln308_fu_896_p2(0) = '1') else 
        nibble_K_V_reg_541;
    nibble_K_V_2_fu_769_p4 <= ap_phi_mux_data_V_phi_fu_524_p4(42 downto 39);
    num_padd_ops_cast_fu_926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_padd_ops),32));

    num_padd_ops_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_out_blk_n <= num_padd_ops_out_full_n;
        else 
            num_padd_ops_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_padd_ops_out_din <= num_padd_ops;

    num_padd_ops_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n)
    begin
        if ((not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_padd_ops_out_write <= ap_const_logic_1;
        else 
            num_padd_ops_out_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln260_fu_632_p2 <= (icmp_ln878_fu_621_p2 or icmp_ln878_13_fu_627_p2);
    or_ln269_fu_836_p2 <= (shl_ln_fu_815_p3 or ap_const_lv5_1);
    or_ln282_fu_742_p2 <= (shl_ln1_fu_721_p3 or ap_const_lv5_1);
    or_ln315_fu_945_p2 <= (lnot_i_i_i_fu_920_p2 or icmp_ln315_fu_939_p2);
    p_Result_1_i_fu_796_p4 <= p_Val2_1_reg_1093(38 downto 13);
    p_Result_4_i_fu_702_p4 <= p_Val2_2_reg_1069(38 downto 13);
    p_cast15_i_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_31_reg_510),64));
    p_cast_i_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_499),64));

    padd_count_V_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, zext_ln708_1_fu_648_p1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            padd_count_V_address0 <= zext_ln708_1_fu_648_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            padd_count_V_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            padd_count_V_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            padd_count_V_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            padd_count_V_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            padd_count_V_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            padd_count_V_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            padd_count_V_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            padd_count_V_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            padd_count_V_address0 <= "XXXX";
        end if; 
    end process;


    padd_count_V_address1_assign_proc : process(ap_CS_fsm_state1, ap_enable_reg_pp2_iter0, padd_count_V_addr_16_reg_1082, ap_CS_fsm_pp2_stage1, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_block_pp2_stage1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            padd_count_V_address1 <= padd_count_V_addr_16_reg_1082;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            padd_count_V_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            padd_count_V_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            padd_count_V_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            padd_count_V_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            padd_count_V_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            padd_count_V_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            padd_count_V_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            padd_count_V_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            padd_count_V_address1 <= "XXXX";
        end if; 
    end process;


    padd_count_V_ce0_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0_11001, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or (not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            padd_count_V_ce0 <= ap_const_logic_1;
        else 
            padd_count_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    padd_count_V_ce1_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001)) or (not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            padd_count_V_ce1 <= ap_const_logic_1;
        else 
            padd_count_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    padd_count_V_d1_assign_proc : process(ap_CS_fsm_state1, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp2_stage1, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_block_pp2_stage1, add_ln691_fu_675_p2)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1))) then 
            padd_count_V_d1 <= add_ln691_fu_675_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            padd_count_V_d1 <= ap_const_lv13_0;
        else 
            padd_count_V_d1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    padd_count_V_we0_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            padd_count_V_we0 <= ap_const_logic_1;
        else 
            padd_count_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    padd_count_V_we1_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_padd_ops_out_full_n, ap_enable_reg_pp2_iter0, icmp_ln878_reg_1049, icmp_ln878_13_reg_1053, or_ln260_reg_1057, tmp_i_reg_1061, tmp_8_i_reg_1065, ap_CS_fsm_pp2_stage1, ap_block_pp2_stage1_11001, ap_CS_fsm_state8, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage1) and (ap_const_boolean_0 = ap_block_pp2_stage1_11001) and (((tmp_8_i_reg_1065 = ap_const_lv1_1) and (tmp_i_reg_1061 = ap_const_lv1_0) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1)) or ((tmp_8_i_reg_1065 = ap_const_lv1_1) and (or_ln260_reg_1057 = ap_const_lv1_1) and (icmp_ln878_13_reg_1053 = ap_const_lv1_1) and (icmp_ln878_reg_1049 = ap_const_lv1_0)))) or (not(((num_padd_ops_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            padd_count_V_we1 <= ap_const_logic_1;
        else 
            padd_count_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_690_p2 <= std_logic_vector(unsigned(zext_ln1347_fu_686_p1) + unsigned(ap_const_lv14_3FFF));
    ret_V_2_fu_716_p2 <= std_logic_vector(unsigned(lhs_V_2_reg_1077) + unsigned(ap_const_lv4_F));
    ret_V_fu_810_p2 <= std_logic_vector(unsigned(lhs_V_reg_1101) + unsigned(ap_const_lv4_F));
    shl_ln1_fu_721_p3 <= (ret_V_2_fu_716_p2 & ap_const_lv1_0);
    shl_ln_fu_815_p3 <= (ret_V_fu_810_p2 & ap_const_lv1_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_3_fu_929_p4 <= fill_count_q0(31 downto 3);
    tmp_4_fu_886_p4 <= bcount_q0(31 downto 1);
    tmp_8_i_nbreadreq_fu_202_p3 <= (0=>(BFIFO_2_empty_n), others=>'-');
    tmp_fu_611_p4 <= count_BF1_V_fu_168(12 downto 7);
    tmp_i_nbreadreq_fu_194_p3 <= (0=>(BFIFO_1176_empty_n), others=>'-');
    trunc_ln301_fu_882_p1 <= i_reg_530(4 - 1 downto 0);
    trunc_ln674_1_fu_734_p1 <= p_Val2_2_reg_1069(13 - 1 downto 0);
    trunc_ln674_2_fu_980_p1 <= p_Val2_s_fu_172(39 - 1 downto 0);
    trunc_ln674_fu_828_p1 <= p_Val2_1_reg_1093(13 - 1 downto 0);
    zext_ln1347_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_B_q0),14));
    zext_ln268_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_815_p3),64));
    zext_ln269_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln269_fu_836_p2),64));
    zext_ln281_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_721_p3),64));
    zext_ln282_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln282_fu_742_p2),64));
    zext_ln358_1_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_fu_828_p1),32));
    zext_ln358_2_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_4_i_fu_702_p4),32));
    zext_ln358_3_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln674_1_fu_734_p1),32));
    zext_ln358_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_i_fu_796_p4),32));
    zext_ln708_1_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_638_p4),64));
    zext_ln708_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_654_p4),64));
    zext_ln870_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln691_fu_675_p2),14));
end behav;
